// <auto-generated />
using System;
using MVCBlogApp.Persistence.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MVCBlogApp.Persistence.Migrations
{
    [DbContext(typeof(MVCBlogDbContext))]
    [Migration("20230428082342_mig_2")]
    partial class mig_2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MVCBlogApp.Domain.Entities._DaysMeal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("DaysId")
                        .HasColumnType("int")
                        .HasColumnName("DaysID");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DietListId")
                        .HasColumnType("int")
                        .HasColumnName("DietListID");

                    b.Property<int?>("MealId")
                        .HasColumnType("int")
                        .HasColumnName("MealID");

                    b.Property<TimeSpan?>("TimeInterval")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.ToTable("_DaysMeal", (string)null);
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities._Examination", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("ExaminationId")
                        .HasColumnType("int")
                        .HasColumnName("ExaminationID");

                    b.Property<int?>("LabId")
                        .HasColumnType("int")
                        .HasColumnName("LabID");

                    b.Property<string>("Value")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("_Examination", (string)null);
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.AllergyProducingFoods", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Allergen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dislike")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Like")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MembersInformationId")
                        .HasColumnType("int")
                        .HasColumnName("MembersInformationID");

                    b.HasKey("Id");

                    b.HasIndex("MembersInformationId");

                    b.ToTable("AllergyProducingFoods");
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.AppointmentDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("AppointmentId")
                        .HasColumnType("int")
                        .HasColumnName("AppointmentID");

                    b.Property<string>("Diagnosis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("History")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MembersId")
                        .HasColumnType("int")
                        .HasColumnName("MembersID");

                    b.Property<decimal?>("OilRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Size")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Treatment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.Property<decimal?>("Weight")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("AppointmentDetail", (string)null);
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.Article", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Action")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ArticleCategoryId")
                        .HasColumnType("int")
                        .HasColumnName("ArticleCategoryID");

                    b.Property<DateTime?>("ArticleDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("AuthorUserId")
                        .HasColumnType("int")
                        .HasColumnName("AuthorUserID");

                    b.Property<string>("Controller")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CoverImgUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreateUserId")
                        .HasColumnType("int")
                        .HasColumnName("CreateUserID");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FontAwesomeIcon")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool?>("IsComponent")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsMainPage")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsMenu")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNewsComponent")
                        .HasColumnType("bit");

                    b.Property<int?>("LangId")
                        .HasColumnType("int")
                        .HasColumnName("LangID");

                    b.Property<string>("MetaDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MetaKey")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("MetaTitle")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("NavigationId")
                        .HasColumnType("int")
                        .HasColumnName("NavigationID");

                    b.Property<int?>("Orders")
                        .HasColumnType("int");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("StatusID");

                    b.Property<string>("SubTitle")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Title")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("UpdateUserId")
                        .HasColumnType("int")
                        .HasColumnName("UpdateUserID");

                    b.Property<string>("UrlRoot")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ArticleCategoryId");

                    b.ToTable("Article", (string)null);
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.ArticleCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CategoryName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreateUserId")
                        .HasColumnType("int")
                        .HasColumnName("CreateUserID");

                    b.Property<int?>("LangId")
                        .HasColumnType("int")
                        .HasColumnName("LangID");

                    b.Property<string>("MetaDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MetaKey")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("MetaTitle")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int")
                        .HasColumnName("ParentID");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("StatusID");

                    b.HasKey("Id");

                    b.ToTable("ArticleCategory", (string)null);
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.Auth", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AuthName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("Auth", (string)null);
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.Banner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("BannerName")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int?>("BannerOrder")
                        .HasColumnType("int");

                    b.Property<string>("BannerUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DateString")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int?>("LangId")
                        .HasColumnType("int")
                        .HasColumnName("LangID");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("StatusID");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Banner", (string)null);
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.Blog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Action")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("BlogCategoryId")
                        .HasColumnType("int")
                        .HasColumnName("BlogCategoryID");

                    b.Property<int?>("BlogTypeId")
                        .HasColumnType("int")
                        .HasColumnName("BlogTypeID");

                    b.Property<string>("Contents")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Controller")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CoverImgUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreateUserId")
                        .HasColumnType("int")
                        .HasColumnName("CreateUserID");

                    b.Property<bool?>("IsComponent")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsMainPage")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsMenu")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNewsComponent")
                        .HasColumnType("bit");

                    b.Property<int?>("LangId")
                        .HasColumnType("int")
                        .HasColumnName("LangID");

                    b.Property<string>("MetaDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MetaKey")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("MetaTitle")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int?>("NavigationId")
                        .HasColumnType("int")
                        .HasColumnName("NavigationID");

                    b.Property<int?>("Orders")
                        .HasColumnType("int");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("StatusID");

                    b.Property<string>("SubTitle")
                        .HasMaxLength(750)
                        .HasColumnType("nvarchar(750)");

                    b.Property<string>("Title")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdateUserId")
                        .HasColumnType("int")
                        .HasColumnName("UpdateUserID");

                    b.Property<string>("UrlRoot")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BlogCategoryId");

                    b.HasIndex("BlogTypeId");

                    b.ToTable("Blog", (string)null);
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.BlogCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CategoryDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CategoryName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("LangId")
                        .HasColumnType("int")
                        .HasColumnName("LangID");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("StatusID");

                    b.HasKey("Id");

                    b.ToTable("BlogCategory", (string)null);
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.BlogType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("LangId")
                        .HasColumnType("int")
                        .HasColumnName("LangID");

                    b.Property<string>("TypeName")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("BlogType", (string)null);
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Action")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("BookName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Controller")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreateUserId")
                        .HasColumnType("int")
                        .HasColumnName("CreateUserID");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsMainPage")
                        .HasColumnType("bit");

                    b.Property<int?>("LangId")
                        .HasColumnType("int")
                        .HasColumnName("LangID");

                    b.Property<string>("MetaDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MetaKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MetaTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NavigationId")
                        .HasColumnType("int")
                        .HasColumnName("NavigationID");

                    b.Property<int?>("Orders")
                        .HasColumnType("int");

                    b.Property<int?>("PublicationYear")
                        .HasColumnType("int");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("StatusID");

                    b.Property<string>("UrlRoot")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("Book", (string)null);
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.BookCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CategoryName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreateUserId")
                        .HasColumnType("int")
                        .HasColumnName("CreateUserID");

                    b.Property<int?>("LangId")
                        .HasColumnType("int")
                        .HasColumnName("LangID");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("StatusID");

                    b.HasKey("Id");

                    b.ToTable("BookCategory", (string)null);
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.CalcBmh", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Gender")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("NameSurname")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<decimal?>("Result")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("Size")
                        .HasColumnType("int");

                    b.Property<int?>("Weight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CalcBmh", (string)null);
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.CalcBMI", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("NameSurname")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<decimal?>("Result")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("Size")
                        .HasColumnType("int");

                    b.Property<int?>("Weight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CalcBMI", (string)null);
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.CalcOptimum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Gender")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("NameSurname")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<decimal?>("Result1")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Result2")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Result3")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Result4")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("Size")
                        .HasColumnType("int");

                    b.Property<int?>("Weight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CalcOptimum", (string)null);
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.CalcPulse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Gender")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("NameSurname")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<decimal?>("ResultMax")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ResultMin")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("CalcPulse", (string)null);
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.Carousel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Action")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Controller")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreateUserId")
                        .HasColumnType("int")
                        .HasColumnName("CreateUserID");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImgName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ImgUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LangId")
                        .HasColumnType("int")
                        .HasColumnName("LangID");

                    b.Property<string>("MetaDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MetaKey")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("MetaTitle")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("Orders")
                        .HasColumnType("int");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("StatusID");

                    b.Property<string>("Title")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("TitleClass")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrlRoot")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Carousel", (string)null);
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.Case", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CaseName")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<int?>("LangId")
                        .HasColumnType("int")
                        .HasColumnName("LangID");

                    b.HasKey("Id");

                    b.ToTable("Case", (string)null);
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.Confession", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreateDatetime")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsAprove")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsRead")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsVisible")
                        .HasColumnType("bit");

                    b.Property<int?>("LangId")
                        .HasColumnType("int")
                        .HasColumnName("LangID");

                    b.Property<string>("MemberConfession")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MemberName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("StatusID");

                    b.HasKey("Id");

                    b.ToTable("Confession", (string)null);
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.ConsultancyForm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("ConsultancyFormTypeId")
                        .HasColumnType("int")
                        .HasColumnName("ConsultancyFormTypeID");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameSurname")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Phone")
                        .HasMaxLength(14)
                        .HasColumnType("nchar(14)")
                        .IsFixedLength();

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("StatusID");

                    b.Property<string>("Subject")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.ToTable("ConsultancyForm", (string)null);
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.ConsultancyFormType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ConsultancyFormTypeName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("ConsultancyFormType", (string)null);
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("ContactCategoryId")
                        .HasColumnType("int")
                        .HasColumnName("ContactCategoryID");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool?>("IsRead")
                        .HasColumnType("bit");

                    b.Property<string>("NameSurname")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Phone")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("StatusID");

                    b.Property<string>("Subject")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Contact", (string)null);
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.ContactCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ContactCategoryName")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int?>("LangId")
                        .HasColumnType("int")
                        .HasColumnName("LangID");

                    b.HasKey("Id");

                    b.ToTable("ContactCategory", (string)null);
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.D_Appointment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("AppointmentDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreateUserId")
                        .HasColumnType("int")
                        .HasColumnName("CreateUserID");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Interval")
                        .HasColumnType("int");

                    b.Property<bool?>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<int?>("MembersId")
                        .HasColumnType("int")
                        .HasColumnName("MembersID");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("StatusID");

                    b.Property<byte[]>("Subject")
                        .HasMaxLength(250)
                        .HasColumnType("varbinary(250)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("Id");

                    b.ToTable("D_Appointment", (string)null);
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.D_Specialties", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Specialties")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("D_Specialties", (string)null);
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.Days", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("DayName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Days");
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.DietList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("AppointmentDetailId")
                        .HasColumnType("int")
                        .HasColumnName("AppointmentDetailID");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("Id");

                    b.ToTable("DietList", (string)null);
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.Diseases", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("DiseasesName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Diseases");
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.DiseasesCardiovascular", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("DiseasesId")
                        .HasColumnType("int")
                        .HasColumnName("DiseasesID");

                    b.Property<int?>("MembersInformationId")
                        .HasColumnType("int")
                        .HasColumnName("MembersInformationID");

                    b.HasKey("Id");

                    b.HasIndex("DiseasesId");

                    b.HasIndex("MembersInformationId");

                    b.ToTable("DiseasesCardiovascular", (string)null);
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.DiseasesDiabetes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("DiseasesId")
                        .HasColumnType("int")
                        .HasColumnName("DiseasesID");

                    b.Property<int?>("MembersInformationId")
                        .HasColumnType("int")
                        .HasColumnName("MembersInformationID");

                    b.HasKey("Id");

                    b.HasIndex("DiseasesId");

                    b.HasIndex("MembersInformationId");

                    b.ToTable("DiseasesDiabetes");
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.DiseasesDigestiveDisorders", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("DiseasesId")
                        .HasColumnType("int")
                        .HasColumnName("DiseasesID");

                    b.Property<int?>("MembersInformationId")
                        .HasColumnType("int")
                        .HasColumnName("MembersInformationID");

                    b.HasKey("Id");

                    b.HasIndex("DiseasesId");

                    b.HasIndex("MembersInformationId");

                    b.ToTable("DiseasesDigestiveDisorders");
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.DiseasesFamilyMembers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("DiseasesId")
                        .HasColumnType("int")
                        .HasColumnName("DiseasesID");

                    b.Property<int?>("MembersInformationId")
                        .HasColumnType("int")
                        .HasColumnName("MembersInformationID");

                    b.HasKey("Id");

                    b.HasIndex("DiseasesId");

                    b.HasIndex("MembersInformationId");

                    b.ToTable("DiseasesFamilyMembers");
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreateUserId")
                        .HasColumnType("int")
                        .HasColumnName("CreateUserID");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EventCategoryId")
                        .HasColumnType("int")
                        .HasColumnName("EventCategoryID");

                    b.Property<DateTime?>("FinishDatetime")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("StartDatetime")
                        .HasColumnType("datetime");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("StatusID");

                    b.Property<string>("Title")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("Event", (string)null);
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.EventCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("EventCategoryName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("EventCategory", (string)null);
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.Examination", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ExaminatioName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Examination", (string)null);
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.FemaleMentalState", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("BreastFeeding")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gravidity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsBreastFeedingPeriod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsGiveBirthTo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsHormontherapy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsMenstruatioRegular")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MembersInformationId")
                        .HasColumnType("int")
                        .HasColumnName("MembersInformationID");

                    b.Property<string>("Menopause")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Menstruation")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MembersInformationId");

                    b.ToTable("FemaleMentalState", (string)null);
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.FixBmh", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FormId")
                        .HasColumnType("int")
                        .HasColumnName("FormID");

                    b.Property<string>("ImgUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LangId")
                        .HasColumnType("int")
                        .HasColumnName("LangID");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("StatusID");

                    b.Property<string>("Title")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("FormId");

                    b.ToTable("FixBmh", (string)null);
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.FixBMI", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FormId")
                        .HasColumnType("int")
                        .HasColumnName("FormID");

                    b.Property<string>("ImgUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LangId")
                        .HasColumnType("int")
                        .HasColumnName("LangID");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("StatusID");

                    b.Property<string>("Title")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("FormId");

                    b.ToTable("FixBMI", (string)null);
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.FixCalorieSch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FormId")
                        .HasColumnType("int")
                        .HasColumnName("FormID");

                    b.Property<string>("ImgUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LangId")
                        .HasColumnType("int")
                        .HasColumnName("LangID");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("StatusID");

                    b.Property<string>("Title")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("FormId");

                    b.ToTable("FixCalorieSch", (string)null);
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.FixFeedPyramid", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FormId")
                        .HasColumnType("int")
                        .HasColumnName("FormID");

                    b.Property<string>("ImgUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LangId")
                        .HasColumnType("int")
                        .HasColumnName("LangID");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("StatusID");

                    b.Property<string>("Title")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("FormId");

                    b.ToTable("FixFeedPyramid", (string)null);
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.FixHeartDiseases", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FormId")
                        .HasColumnType("int")
                        .HasColumnName("FormID");

                    b.Property<string>("ImgUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LangId")
                        .HasColumnType("int")
                        .HasColumnName("LangID");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("StatusID");

                    b.Property<string>("Title")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("FormId");

                    b.ToTable("FixHeartDiseases");
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.FixMealSize", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FormId")
                        .HasColumnType("int")
                        .HasColumnName("FormID");

                    b.Property<string>("ImgUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LangId")
                        .HasColumnType("int")
                        .HasColumnName("LangID");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("StatusID");

                    b.Property<string>("Title")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("FormId");

                    b.ToTable("FixMealSize", (string)null);
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.FixOptimum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FormId")
                        .HasColumnType("int")
                        .HasColumnName("FormID");

                    b.Property<string>("ImgUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LangId")
                        .HasColumnType("int")
                        .HasColumnName("LangID");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("StatusID");

                    b.Property<string>("Title")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("FormId");

                    b.ToTable("FixOptimum", (string)null);
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.FixPulse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FormId")
                        .HasColumnType("int")
                        .HasColumnName("FormID");

                    b.Property<string>("ImgUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LangId")
                        .HasColumnType("int")
                        .HasColumnName("LangID");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("StatusID");

                    b.Property<string>("Title")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("FormId");

                    b.ToTable("FixPulse", (string)null);
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.FoodHabitMood", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool?>("All")
                        .HasColumnType("bit");

                    b.Property<bool?>("Doomy")
                        .HasColumnType("bit");

                    b.Property<bool?>("Happy")
                        .HasColumnType("bit");

                    b.Property<int?>("MembersInformationId")
                        .HasColumnType("int")
                        .HasColumnName("MembersInformationID");

                    b.Property<bool?>("Sad")
                        .HasColumnType("bit");

                    b.Property<bool?>("Stress")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("FoodHabitMood", (string)null);
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.FoodHabits", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Breakfast")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BreakfastSnack")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dinner")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DinnerSnack")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lunch")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LunchSnack")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MembersInformationId")
                        .HasColumnType("int")
                        .HasColumnName("MembersInformationID");

                    b.HasKey("Id");

                    b.HasIndex("MembersInformationId");

                    b.ToTable("FoodHabit");
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.FoodTime", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("MembersInformationId")
                        .HasColumnType("int")
                        .HasColumnName("MembersInformationID");

                    b.Property<string>("WeekdayMorning")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WeekdayNight")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WeekdayNoon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WeekendMorning")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WeekendNight")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WeekendNoon")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MembersInformationId");

                    b.ToTable("FoodTime", (string)null);
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.Form", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Action")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Controller")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("FormName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("LangId")
                        .HasColumnType("int")
                        .HasColumnName("LangID");

                    b.HasKey("Id");

                    b.ToTable("Form", (string)null);
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.Genders", b =>
                {
                    b.Property<string>("Gender")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("Gender")
                        .IsFixedLength();

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("LangId")
                        .HasColumnType("int")
                        .HasColumnName("LangID");

                    b.ToTable("Genders");
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.HearAboutUS", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("HearAboutUsname")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("HearAboutUSName");

                    b.Property<int?>("LangId")
                        .HasColumnType("int")
                        .HasColumnName("LangID");

                    b.HasKey("Id");

                    b.ToTable("HearAboutUS", (string)null);
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreateUserId")
                        .HasColumnType("int")
                        .HasColumnName("CreateUserID");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsCover")
                        .HasColumnType("bit");

                    b.Property<int?>("LangId")
                        .HasColumnType("int")
                        .HasColumnName("LangID");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("StatusID");

                    b.Property<string>("Title")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("Image", (string)null);
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.ImageBlog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("BlogId")
                        .HasColumnType("int")
                        .HasColumnName("BlogID");

                    b.Property<string>("ImgName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ImgUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsCover")
                        .HasColumnType("bit");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("StatusID");

                    b.HasKey("Id");

                    b.ToTable("ImageBlog", (string)null);
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.ImageCarousel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CarouselId")
                        .HasColumnType("int")
                        .HasColumnName("CarouselID");

                    b.Property<string>("ImgName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ImgUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("StatusID");

                    b.HasKey("Id");

                    b.ToTable("ImageCarousel", (string)null);
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.Influencer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CompanyName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("CompanySector")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("CreateDatetime")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameSurname")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Phone")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("StatusID");

                    b.HasKey("Id");

                    b.ToTable("Influencer", (string)null);
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.Lab", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("AppointmentDetailId")
                        .HasColumnType("int")
                        .HasColumnName("AppointmentDetailID");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LabDateTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("MembersId")
                        .HasColumnType("int")
                        .HasColumnName("MembersID");

                    b.Property<string>("Title")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("UsersId")
                        .HasColumnType("int")
                        .HasColumnName("UsersID");

                    b.HasKey("Id");

                    b.ToTable("Lab", (string)null);
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.Languages", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Language")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Language");

                    b.HasKey("Id");

                    b.ToTable("Languages");
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.MasterRoot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Action")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Controller")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("UrlRoot")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MasterRoot", (string)null);
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.Meal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("MealName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Meal", (string)null);
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.Members", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreateUserId")
                        .HasColumnType("int")
                        .HasColumnName("CreateUserID");

                    b.Property<string>("Email")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("EMail");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Lacation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("MembersAuthId")
                        .HasColumnType("int")
                        .HasColumnName("MembersAuthID");

                    b.Property<string>("NameSurname")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Phone")
                        .HasMaxLength(15)
                        .HasColumnType("nchar(15)")
                        .IsFixedLength();

                    b.HasKey("Id");

                    b.ToTable("Members");
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.MembersAuth", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("MembersAuthName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("MembersAuth", (string)null);
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.MembersInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("Birthdate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ConsumedVegetables")
                        .HasColumnType("int");

                    b.Property<bool?>("CpreviousDisease")
                        .HasColumnType("bit")
                        .HasColumnName("CPreviousDisease");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("DidYouGainWeightInTheArmy")
                        .HasColumnType("bit");

                    b.Property<string>("DoYouHaveHormonalProblem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("DoYouUseCigarettes")
                        .HasColumnType("bit");

                    b.Property<string>("DoYouUseVitaminAndMinerals")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("FoodLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FoodMade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GetDrugged")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool?>("HaveYouGainedWeight")
                        .HasColumnType("bit");

                    b.Property<string>("HistoryOfWeigh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HowDoYouFeel")
                        .HasColumnType("int");

                    b.Property<int?>("HowFrequencyOfActivity")
                        .HasColumnType("int");

                    b.Property<int?>("HowIsYourEnergy")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("IsBloodCoagulationDisorders")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Job")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ManTheNeedForEatingVaries")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MembersId")
                        .HasColumnType("int")
                        .HasColumnName("MembersID");

                    b.Property<string>("Name")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("OneDaySummary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Surname")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("TheQuantityConsumedAlchol")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TheQuantityConsumedCoffe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TheQuantityConsumedFizzy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TheQuantityConsumedTea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TheQuantityConsumedWater")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("MembersInformation", (string)null);
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.MetaKeyword", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Canonical")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LangId")
                        .HasColumnType("int")
                        .HasColumnName("LangID");

                    b.Property<string>("MetaDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MetaKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MetaTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Page")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("StatusID");

                    b.Property<string>("Title")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("Id");

                    b.ToTable("MetaKeyword", (string)null);
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.Navigation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Action")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Controller")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("FontAwesomeIcon")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsHeader")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsSubHeader")
                        .HasColumnType("bit");

                    b.Property<int?>("LangId")
                        .HasColumnType("int")
                        .HasColumnName("LangID");

                    b.Property<string>("MetaKey")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("MetaTitle")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("NavigationName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("OrderNo")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int")
                        .HasColumnName("ParentID");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.Property<string>("UrlRoot")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("Navigation", (string)null);
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.NewsBulletin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreateUserId")
                        .HasColumnType("int")
                        .HasColumnName("CreateUserID");

                    b.Property<string>("Email")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("StatusID");

                    b.HasKey("Id");

                    b.ToTable("NewsBulletin", (string)null);
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.NewsPaper", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("LangId")
                        .HasColumnType("int")
                        .HasColumnName("LangID");

                    b.Property<string>("NewsPaperName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("StatusID");

                    b.HasKey("Id");

                    b.ToTable("NewsPaper", (string)null);
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.OurTeam", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Bio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreateUserId")
                        .HasColumnType("int")
                        .HasColumnName("CreateUserID");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LangId")
                        .HasColumnType("int")
                        .HasColumnName("LangID");

                    b.Property<string>("NameSurname")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("StatusID");

                    b.Property<string>("Title")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("OurTeam", (string)null);
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.Press", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LangId")
                        .HasColumnType("int")
                        .HasColumnName("LangID");

                    b.Property<string>("MetaDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MetaKey")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("MetaTitle")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("NewsPaperId")
                        .HasColumnType("int")
                        .HasColumnName("NewsPaperID");

                    b.Property<int?>("PressTypeId")
                        .HasColumnType("int")
                        .HasColumnName("PressTypeID");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("StatusID");

                    b.Property<string>("SubTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("UrlLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrlRoot")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Press", (string)null);
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.PressType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("PressTypeName")
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.HasKey("Id");

                    b.ToTable("PressType", (string)null);
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.References", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreateUserId")
                        .HasColumnType("int")
                        .HasColumnName("CreateUserID");

                    b.Property<string>("ImgUrl")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("StatusID");

                    b.Property<string>("Title")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("UrlLink")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("References");
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.ResultBmh", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Resulttext")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ResultBmh", (string)null);
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.ResultBMI", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("IntervalDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("IntervalMax")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("IntervalMin")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("ResultBMI", (string)null);
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.ResultOptimum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Result1text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Result2text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Result3text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Result4text")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ResultOptimum", (string)null);
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.ResultPulse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ResultMaxText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResultMinText")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ResultPulse", (string)null);
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.SeminarVisuals", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImgUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LangId")
                        .HasColumnType("int")
                        .HasColumnName("LangID");

                    b.Property<string>("Location")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("StatusID");

                    b.Property<string>("Title")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("SeminarVisuals");
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.SLeftNavigation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("LangId")
                        .HasColumnType("int")
                        .HasColumnName("LangID");

                    b.Property<string>("Title")
                        .HasMaxLength(1250)
                        .HasColumnType("nvarchar(1250)");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .HasMaxLength(1250)
                        .HasColumnType("nvarchar(1250)");

                    b.HasKey("Id");

                    b.ToTable("SLeftNavigation", (string)null);
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("StatusName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Status", (string)null);
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.TaylanK", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("About")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Adress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Bio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Email1")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Email2")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Facebook")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Fax")
                        .HasMaxLength(24)
                        .HasColumnType("nchar(24)")
                        .IsFixedLength();

                    b.Property<string>("GoogleMap")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Instagram")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("LangId")
                        .HasColumnType("int")
                        .HasColumnName("LangID");

                    b.Property<string>("Logo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Metadescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Metakey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Metatitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone1")
                        .HasMaxLength(24)
                        .HasColumnType("nchar(24)")
                        .IsFixedLength();

                    b.Property<string>("Phone2")
                        .HasMaxLength(24)
                        .HasColumnType("nchar(24)")
                        .IsFixedLength();

                    b.Property<string>("Pinterest")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("StatusID");

                    b.Property<string>("Twitter")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("Id");

                    b.ToTable("TaylanK", (string)null);
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("AuthId")
                        .HasColumnType("int")
                        .HasColumnName("AuthID");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreateUserId")
                        .HasColumnType("int")
                        .HasColumnName("CreateUserID");

                    b.Property<string>("Email")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifiedUserId")
                        .HasColumnType("int")
                        .HasColumnName("ModifiedUserID");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Title")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Username")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.Video", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreateUserId")
                        .HasColumnType("int")
                        .HasColumnName("CreateUserID");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LangId")
                        .HasColumnType("int")
                        .HasColumnName("LangID");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("StatusID");

                    b.Property<string>("Title")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("VideoCategoryId")
                        .HasColumnType("int")
                        .HasColumnName("VideoCategoryID");

                    b.Property<string>("VideoEmbedCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VideoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("VideoCategoryId");

                    b.ToTable("Video", (string)null);
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.VideoCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("LangId")
                        .HasColumnType("int")
                        .HasColumnName("LangID");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("StatusID");

                    b.Property<string>("VideoCategoryName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("VideoCategory", (string)null);
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.Workshop", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreateUserId")
                        .HasColumnType("int")
                        .HasColumnName("CreateUserID");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FinishDateTime")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsMainPage")
                        .HasColumnType("bit");

                    b.Property<int?>("LangId")
                        .HasColumnType("int")
                        .HasColumnName("LangID");

                    b.Property<int?>("NavigationId")
                        .HasColumnType("int")
                        .HasColumnName("NavigationID");

                    b.Property<int?>("Orders")
                        .HasColumnType("int");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("StartDateTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("StatusID");

                    b.Property<string>("Title")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("WseducationId")
                        .HasColumnType("int")
                        .HasColumnName("WSEducationID");

                    b.Property<int?>("WstypeId")
                        .HasColumnType("int")
                        .HasColumnName("WSTypeID");

                    b.HasKey("Id");

                    b.ToTable("Workshop", (string)null);
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.WorkShopApplicationForm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AttendancePurpose")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("CreateDateTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("Diet")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("Gender")
                        .HasColumnType("int");

                    b.Property<int?>("HearAboutusId")
                        .HasColumnType("int")
                        .HasColumnName("HearAboutusID");

                    b.Property<bool?>("IsApprove")
                        .HasColumnType("bit");

                    b.Property<string>("Job")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("LifeContented")
                        .HasColumnType("int");

                    b.Property<string>("NameSurname")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasMaxLength(14)
                        .HasColumnType("nchar(14)")
                        .IsFixedLength();

                    b.Property<int?>("WorkShopId")
                        .HasColumnType("int")
                        .HasColumnName("WorkShopID");

                    b.HasKey("Id");

                    b.ToTable("WorkShopApplicationForm", (string)null);
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.WorkshopCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("LangId")
                        .HasColumnType("int")
                        .HasColumnName("LangID");

                    b.Property<string>("WscategoryName")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("WSCategoryName");

                    b.HasKey("Id");

                    b.ToTable("WorkshopCategory", (string)null);
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.WorkshopEducation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("LangId")
                        .HasColumnType("int")
                        .HasColumnName("LangID");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("StatusID");

                    b.Property<string>("WsEducationName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("WscategoryId")
                        .HasColumnType("int")
                        .HasColumnName("WSCategoryID");

                    b.HasKey("Id");

                    b.ToTable("WorkshopEducation", (string)null);
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.WorkshopType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("LangId")
                        .HasColumnType("int")
                        .HasColumnName("LangID");

                    b.Property<string>("WstypeName")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("WSTypeName");

                    b.HasKey("Id");

                    b.ToTable("WorkshopType", (string)null);
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.X_BlogCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("BlogCategoryId")
                        .HasColumnType("int")
                        .HasColumnName("BlogCategoryID");

                    b.Property<int?>("BlogId")
                        .HasColumnType("int")
                        .HasColumnName("BlogID");

                    b.HasKey("Id");

                    b.ToTable("X_BlogCategory", (string)null);
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.X_BookCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("BookCategoryId")
                        .HasColumnType("int")
                        .HasColumnName("BookCategoryID");

                    b.Property<int?>("BookId")
                        .HasColumnType("int")
                        .HasColumnName("BookID");

                    b.HasKey("Id");

                    b.HasIndex("BookCategoryId");

                    b.HasIndex("BookId");

                    b.ToTable("X_BookCategory", (string)null);
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.AllergyProducingFoods", b =>
                {
                    b.HasOne("MVCBlogApp.Domain.Entities.MembersInformation", "MembersInformation")
                        .WithMany("AllergyProducingFoods")
                        .HasForeignKey("MembersInformationId")
                        .HasConstraintName("FK_AllergyProducingFoods_MembersInformation");

                    b.Navigation("MembersInformation");
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.Article", b =>
                {
                    b.HasOne("MVCBlogApp.Domain.Entities.ArticleCategory", "ArticleCategory")
                        .WithMany("Articles")
                        .HasForeignKey("ArticleCategoryId")
                        .HasConstraintName("FK_Article_ArticleCategory");

                    b.Navigation("ArticleCategory");
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.Blog", b =>
                {
                    b.HasOne("MVCBlogApp.Domain.Entities.BlogCategory", "BlogCategory")
                        .WithMany("Blogs")
                        .HasForeignKey("BlogCategoryId")
                        .HasConstraintName("FK_Blog_BlogCategory");

                    b.HasOne("MVCBlogApp.Domain.Entities.BlogType", "BlogType")
                        .WithMany("Blogs")
                        .HasForeignKey("BlogTypeId")
                        .HasConstraintName("FK_Blog_BlogType");

                    b.Navigation("BlogCategory");

                    b.Navigation("BlogType");
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.DiseasesCardiovascular", b =>
                {
                    b.HasOne("MVCBlogApp.Domain.Entities.Diseases", "Diseases")
                        .WithMany("DiseasesCardiovasculars")
                        .HasForeignKey("DiseasesId")
                        .HasConstraintName("FK_DiseasesCardiovascular_Diseases");

                    b.HasOne("MVCBlogApp.Domain.Entities.MembersInformation", "MembersInformation")
                        .WithMany("DiseasesCardiovasculars")
                        .HasForeignKey("MembersInformationId")
                        .HasConstraintName("FK_DiseasesCardiovascular_MembersInformation");

                    b.Navigation("Diseases");

                    b.Navigation("MembersInformation");
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.DiseasesDiabetes", b =>
                {
                    b.HasOne("MVCBlogApp.Domain.Entities.Diseases", "Diseases")
                        .WithMany("DiseasesDiabetes")
                        .HasForeignKey("DiseasesId")
                        .HasConstraintName("FK_DiseasesDiabetes_Diseases");

                    b.HasOne("MVCBlogApp.Domain.Entities.MembersInformation", "MembersInformation")
                        .WithMany("DiseasesDiabetes")
                        .HasForeignKey("MembersInformationId")
                        .HasConstraintName("FK_DiseasesDiabetes_MembersInformation");

                    b.Navigation("Diseases");

                    b.Navigation("MembersInformation");
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.DiseasesDigestiveDisorders", b =>
                {
                    b.HasOne("MVCBlogApp.Domain.Entities.Diseases", "Diseases")
                        .WithMany("DiseasesDigestiveDisorders")
                        .HasForeignKey("DiseasesId")
                        .HasConstraintName("FK_DiseasesDigestiveDisorders_Diseases");

                    b.HasOne("MVCBlogApp.Domain.Entities.MembersInformation", "MembersInformation")
                        .WithMany("DiseasesDigestiveDisorders")
                        .HasForeignKey("MembersInformationId")
                        .HasConstraintName("FK_DiseasesDigestiveDisorders_MembersInformation");

                    b.Navigation("Diseases");

                    b.Navigation("MembersInformation");
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.DiseasesFamilyMembers", b =>
                {
                    b.HasOne("MVCBlogApp.Domain.Entities.Diseases", "Diseases")
                        .WithMany("DiseasesFamilyMembers")
                        .HasForeignKey("DiseasesId")
                        .HasConstraintName("FK_DiseasesFamilyMembers_Diseases");

                    b.HasOne("MVCBlogApp.Domain.Entities.MembersInformation", "MembersInformation")
                        .WithMany("DiseasesFamilyMembers")
                        .HasForeignKey("MembersInformationId")
                        .HasConstraintName("FK_DiseasesFamilyMembers_MembersInformation");

                    b.Navigation("Diseases");

                    b.Navigation("MembersInformation");
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.FemaleMentalState", b =>
                {
                    b.HasOne("MVCBlogApp.Domain.Entities.MembersInformation", "MembersInformation")
                        .WithMany("FemaleMentalStates")
                        .HasForeignKey("MembersInformationId")
                        .HasConstraintName("FK_FemaleMentalState_MembersInformation");

                    b.Navigation("MembersInformation");
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.FixBmh", b =>
                {
                    b.HasOne("MVCBlogApp.Domain.Entities.Form", "Form")
                        .WithMany("FixBmhs")
                        .HasForeignKey("FormId")
                        .HasConstraintName("FK_FixBmh_Form");

                    b.Navigation("Form");
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.FixBMI", b =>
                {
                    b.HasOne("MVCBlogApp.Domain.Entities.Form", "Form")
                        .WithMany("FixBmis")
                        .HasForeignKey("FormId")
                        .HasConstraintName("FK_FixBMI_Form");

                    b.Navigation("Form");
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.FixCalorieSch", b =>
                {
                    b.HasOne("MVCBlogApp.Domain.Entities.Form", "Form")
                        .WithMany("FixCalorieSches")
                        .HasForeignKey("FormId")
                        .HasConstraintName("FK_FixCalorieSch_Form");

                    b.Navigation("Form");
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.FixFeedPyramid", b =>
                {
                    b.HasOne("MVCBlogApp.Domain.Entities.Form", "Form")
                        .WithMany("FixFeedPyramids")
                        .HasForeignKey("FormId")
                        .HasConstraintName("FK_FixFeedPyramid_Form");

                    b.Navigation("Form");
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.FixHeartDiseases", b =>
                {
                    b.HasOne("MVCBlogApp.Domain.Entities.Form", "Form")
                        .WithMany("FixHeartDiseases")
                        .HasForeignKey("FormId")
                        .HasConstraintName("FK_FixHeartDiseases_Form");

                    b.Navigation("Form");
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.FixMealSize", b =>
                {
                    b.HasOne("MVCBlogApp.Domain.Entities.Form", "Form")
                        .WithMany("FixMealSizes")
                        .HasForeignKey("FormId")
                        .HasConstraintName("FK_FixMealSize_Form");

                    b.Navigation("Form");
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.FixOptimum", b =>
                {
                    b.HasOne("MVCBlogApp.Domain.Entities.Form", "Form")
                        .WithMany("FixOptimums")
                        .HasForeignKey("FormId")
                        .HasConstraintName("FK_FixOptimum_Form");

                    b.Navigation("Form");
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.FixPulse", b =>
                {
                    b.HasOne("MVCBlogApp.Domain.Entities.Form", "Form")
                        .WithMany("FixPulses")
                        .HasForeignKey("FormId")
                        .HasConstraintName("FK_FixPulse_Form");

                    b.Navigation("Form");
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.FoodHabits", b =>
                {
                    b.HasOne("MVCBlogApp.Domain.Entities.MembersInformation", "MembersInformation")
                        .WithMany("FoodHabits")
                        .HasForeignKey("MembersInformationId")
                        .HasConstraintName("FK_FoodHabits_MembersInformation");

                    b.Navigation("MembersInformation");
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.FoodTime", b =>
                {
                    b.HasOne("MVCBlogApp.Domain.Entities.MembersInformation", "MembersInformation")
                        .WithMany("FoodTimes")
                        .HasForeignKey("MembersInformationId")
                        .HasConstraintName("FK_FoodTime_MembersInformation");

                    b.Navigation("MembersInformation");
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.Video", b =>
                {
                    b.HasOne("MVCBlogApp.Domain.Entities.VideoCategory", "VideoCategory")
                        .WithMany("Videos")
                        .HasForeignKey("VideoCategoryId")
                        .HasConstraintName("FK_Video_VideoCategory");

                    b.Navigation("VideoCategory");
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.X_BookCategory", b =>
                {
                    b.HasOne("MVCBlogApp.Domain.Entities.BookCategory", "BookCategory")
                        .WithMany("X_BookCategory")
                        .HasForeignKey("BookCategoryId")
                        .HasConstraintName("FK_X_BookCategory_BookCategory");

                    b.HasOne("MVCBlogApp.Domain.Entities.Book", "Book")
                        .WithMany("X_BookCategory")
                        .HasForeignKey("BookId")
                        .HasConstraintName("FK_X_BookCategory_Book");

                    b.Navigation("Book");

                    b.Navigation("BookCategory");
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.ArticleCategory", b =>
                {
                    b.Navigation("Articles");
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.BlogCategory", b =>
                {
                    b.Navigation("Blogs");
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.BlogType", b =>
                {
                    b.Navigation("Blogs");
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.Book", b =>
                {
                    b.Navigation("X_BookCategory");
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.BookCategory", b =>
                {
                    b.Navigation("X_BookCategory");
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.Diseases", b =>
                {
                    b.Navigation("DiseasesCardiovasculars");

                    b.Navigation("DiseasesDiabetes");

                    b.Navigation("DiseasesDigestiveDisorders");

                    b.Navigation("DiseasesFamilyMembers");
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.Form", b =>
                {
                    b.Navigation("FixBmhs");

                    b.Navigation("FixBmis");

                    b.Navigation("FixCalorieSches");

                    b.Navigation("FixFeedPyramids");

                    b.Navigation("FixHeartDiseases");

                    b.Navigation("FixMealSizes");

                    b.Navigation("FixOptimums");

                    b.Navigation("FixPulses");
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.MembersInformation", b =>
                {
                    b.Navigation("AllergyProducingFoods");

                    b.Navigation("DiseasesCardiovasculars");

                    b.Navigation("DiseasesDiabetes");

                    b.Navigation("DiseasesDigestiveDisorders");

                    b.Navigation("DiseasesFamilyMembers");

                    b.Navigation("FemaleMentalStates");

                    b.Navigation("FoodHabits");

                    b.Navigation("FoodTimes");
                });

            modelBuilder.Entity("MVCBlogApp.Domain.Entities.VideoCategory", b =>
                {
                    b.Navigation("Videos");
                });
#pragma warning restore 612, 618
        }
    }
}
